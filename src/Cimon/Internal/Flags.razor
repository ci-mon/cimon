@page "/flags"
@using Cimon.Data.Features
@using System.Collections.Immutable
@inject AppFeatureManager FeatureManager 

<RadzenDataGrid Data="@data" TItem="FeatureModel" ColumnWidth="200px"
                        AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="true">
        <Columns>
           <RadzenDataGridColumn TItem="FeatureModel" Property="Code" Title="Code" Frozen="true" />
           <RadzenDataGridColumn TItem="FeatureModel" Property="GlobalValue" Title="GlobalValue" Frozen="true">
                <Template Context="model">
                    <RadzenSwitch Value="@model.GlobalValue" Change="() => ToggleFlag(model)"></RadzenSwitch>               
                </Template>
           </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>


@code {
    private ImmutableList<FeatureModel> data = null!;
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        data = (await FeatureManager.GetAllFeatures()).ToImmutableList();
    }

    private async Task ToggleFlag(FeatureModel model) {
        var newModel = await FeatureManager.ToggleGlobalValue(model.Code);
        if (newModel is not null) {
            data = data.Remove(model).Add(newModel);
            StateHasChanged();
        }
    }
}