@using Cimon.Auth
@using System.Security.Claims
@using Cimon.Contracts
@using Cimon.Data.Users
@inject ICurrentUserAccessor CurrentUserAccessor
<RadzenStack Orientation="Orientation.Horizontal">
    <RadzenProfileMenu>
        <Template>
            <RadzenLabel aria-label="profile-user-name">@_user.FullName</RadzenLabel>
            <RadzenGravatar Style="width: 22px;height: 22px;" Email="@_user?.Email"></RadzenGravatar>
        </Template>
        <ChildContent>
            @if (_user.IsGuest()) {
                <RadzenProfileMenuItem Icon="login" Text="Login: Auto" 
                                       Path="/Login?autologin=true"></RadzenProfileMenuItem>
                <RadzenProfileMenuItem Icon="password"
                                       Text="Login: Password"
                                       Path="/Login"></RadzenProfileMenuItem>
            } else {
                <RadzenProfileMenuItem Text="Logout" Path="/auth/logout" Icon="logout"></RadzenProfileMenuItem>
            }
        </ChildContent>
    </RadzenProfileMenu>
     @if (!_user.IsGuest()) {
        <MentionsInfoComponent />
    }
</RadzenStack>
<style>
    .rz-menu.rz-profile-menu{
        padding: 0;
    }
</style>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; } = null!;

    private User _user = null!;
    
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        _user = await CurrentUserAccessor.Current;
    }
}
