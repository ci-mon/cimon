@page "/monitor/{monitorId?}"
@using Cimon.Data
@using System.Reactive.Linq
@inject MonitorService MonitorService
@inject BuildInfoService BuildInfoService
@inherits ReactiveComponent

<PageTitle>CI @MonitorId</PageTitle>
<div class="monitor">
    @if (_buildInfos == null) {
        <p>Monitor not fount</p>
    } else {
        @foreach (var buildInfo in _buildInfos) {
            <div class="build-info">
                <BuildInfoComponent Info="buildInfo"></BuildInfoComponent>
            </div>
        }
    }
</div>
<style>
    .monitor{
        background-color: #4d4d4d;
        font-size: xx-small;
        height: calc(100vh - 50px);
        display: grid;
    }
    .build-info{
        font-size: 0.2em;
    }
    @@media only screen and (min-width: 900px) {
        .monitor {
            /*grid-template-columns: auto auto;*/
        }
    }

</style>
@code {

    [Parameter]
    public string? MonitorId { get; set; }

    private IList<BuildInfo>? _buildInfos = new List<BuildInfo>();

    protected override void OnInitialized() {
        MonitorId ??= "default";
        Subscribe(BuildInfoService.Watch(MonitorService.GetMonitorById(MonitorId)
            .Select(m => m?.Builds ?? new List<BuildLocator>())), () => _buildInfos);
    }

}
