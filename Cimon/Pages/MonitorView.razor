@page "/monitor/{monitorId?}"
@using Cimon.Data
@using System.Reactive.Linq
@inject MonitorService MonitorService
@inject BuildInfoService BuildInfoService
@inherits ReactiveComponent

<PageTitle>CI @MonitorId</PageTitle>
@if (_buildInfos == null) {
    <p>Monitor not fount</p>
} else {
    <div class="build-info-list">
        @foreach (var buildInfo in _buildInfos) {
            <BuildInfoComponent Info="buildInfo"></BuildInfoComponent>
        }
    </div>
}

@code {

    [Parameter]
    public string? MonitorId { get; set; }

    private IList<BuildInfo>? _buildInfos = new List<BuildInfo>();

    protected override async Task OnInitializedAsync() {
        MonitorId ??= "default";
        Subscribe(BuildInfoService.Watch(MonitorService.GetMonitorById(MonitorId)
            .Select(m => m?.Builds)), () => _buildInfos);
    }

}