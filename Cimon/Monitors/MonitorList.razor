@page "/MonitorList"
@using Cimon.Data
@using Microsoft.AspNetCore.Http.Extensions
@inject MonitorService MonitorService
@inject NavigationManager NavigationManager 
@inherits ReactiveComponent

<RadzenCard class="rz-mt-4 main-panel">
    <RadzenDataList PageSize="16" WrapItems="true" AllowPaging="true"
                    Data="@_monitors" TItem="Monitor">
        <Template Context="monitor">
            <RadzenCard class="monitor-item">
                <RadzenRow>
                    <RadzenBadge BadgeStyle="BadgeStyle.Success" Text=@(monitor.Builds.Count.ToString()) />
                </RadzenRow>
                <div>
                    <RadzenRow>
                        <RadzenText TextStyle="TextStyle.H2" Text=@($"{monitor.Id}") class="me-1"/>
                    </RadzenRow>
                    <RadzenRow class="item-actions" JustifyContent="JustifyContent.End">
                        <RadzenButton Variant="Variant.Text" Text="Setup" Click="() => SetupMonitor(monitor)"/>
                        <RadzenButton Variant="Variant.Text" Text="Open" Click="() => ViewMonitor(monitor)"/>
                    </RadzenRow>
                </div>
            </RadzenCard>
        </Template>
    </RadzenDataList>
    
</RadzenCard>
<RadzenStack class="bottom-panel" Orientation="Orientation.Horizontal" AlignItems="AlignItems.End" JustifyContent="JustifyContent.End" >
    <RadzenButton Click="add" Icon="add" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Large" class="rz-border-radius-10 rz-shadow-8" />
</RadzenStack>
<style>
    .bottom-panel {
        position: absolute;
        bottom: 0;
        width: 100%;
        padding: 1em;
        pointer-events: none;
    }
    .bottom-panel button {
        pointer-events: all;
    }
    .main-panel {
        height: 100%;
        margin-top: 0px !important;
    }
    .main-panel .rz-paginator {
        justify-content: center;
    }
    .main-panel .rz-datalist-content .rz-paginator-next
     ,.main-panel .rz-datalist-content .rz-paginator-prev{
        margin-right: 0;
        margin-left: 0;
    }
    .main-panel .rz-datalist-content {
        height: calc(100% - 40px);
    }
    .main-panel .rz-datalist-content .rz-g {
        height: 100%;
        display: grid;
        grid-template-columns: auto auto auto auto;
    }
    .monitor-item {
        max-height: 200px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
    .item-actions {
        position: relative;
        bottom: 0px;
    }
</style>
@code {

    private readonly IReadOnlyList<Monitor> _monitors = new List<Monitor>();
    
    protected override void OnInitialized() {
        Subscribe(MonitorService.GetMonitors(), () => _monitors);
    }

    private void add() {
        MonitorService.Add();
    }

    private void ViewMonitor(Monitor monitor) {
        string url = UriHelper.BuildRelative("/monitor", $"/{monitor.Id}");
        NavigationManager.NavigateTo(url); 
    }

    private void SetupMonitor(Monitor monitor) {
        string url = UriHelper.BuildRelative("/setupMonitor", $"/{monitor.Id}");
        NavigationManager.NavigateTo(url); 
    }

}
